// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`pass-fail output Group:  Test: A test outside of a describe block: actual 1`] = `null`;

exports[`pass-fail output Group:  Test: A test outside of a describe block: expected 1`] = `null`;

exports[`pass-fail output Group:  Test: A test outside of a describe block: message 1`] = `""`;

exports[`pass-fail output Group:  Test: A test outside of a describe block: negated 1`] = `false`;

exports[`pass-fail output Group:  Test: A test outside of a describe block: pass 1`] = `true`;

exports[`pass-fail output Group: : afterAllPointers 1`] = `0`;

exports[`pass-fail output Group: : afterEachPointers 1`] = `0`;

exports[`pass-fail output Group: : beforeAllPointers 1`] = `0`;

exports[`pass-fail output Group: : beforeEachPointers 1`] = `0`;

exports[`pass-fail output Group: : pass 1`] = `false`;

exports[`pass-fail output Group: : reason 1`] = `"Test suite  failed because of an afterAll() callback occurred."`;

exports[`pass-fail output Group: fail on group afterAll Test: should run: actual 1`] = `null`;

exports[`pass-fail output Group: fail on group afterAll Test: should run: expected 1`] = `null`;

exports[`pass-fail output Group: fail on group afterAll Test: should run: message 1`] = `""`;

exports[`pass-fail output Group: fail on group afterAll Test: should run: negated 1`] = `false`;

exports[`pass-fail output Group: fail on group afterAll Test: should run: pass 1`] = `true`;

exports[`pass-fail output Group: fail on group afterAll: afterAllPointers 1`] = `1`;

exports[`pass-fail output Group: fail on group afterAll: afterEachPointers 1`] = `0`;

exports[`pass-fail output Group: fail on group afterAll: beforeAllPointers 1`] = `0`;

exports[`pass-fail output Group: fail on group afterAll: beforeEachPointers 1`] = `0`;

exports[`pass-fail output Group: fail on group afterAll: pass 1`] = `false`;

exports[`pass-fail output Group: fail on group afterAll: reason 1`] = `"Test suite fail on group afterAll failed because of an afterAll() callback occurred."`;

exports[`pass-fail output Group: fail on group afterEach Test: should run: actual 1`] = `null`;

exports[`pass-fail output Group: fail on group afterEach Test: should run: expected 1`] = `null`;

exports[`pass-fail output Group: fail on group afterEach Test: should run: message 1`] = `""`;

exports[`pass-fail output Group: fail on group afterEach Test: should run: negated 1`] = `false`;

exports[`pass-fail output Group: fail on group afterEach Test: should run: pass 1`] = `false`;

exports[`pass-fail output Group: fail on group afterEach: afterAllPointers 1`] = `0`;

exports[`pass-fail output Group: fail on group afterEach: afterEachPointers 1`] = `1`;

exports[`pass-fail output Group: fail on group afterEach: beforeAllPointers 1`] = `0`;

exports[`pass-fail output Group: fail on group afterEach: beforeEachPointers 1`] = `0`;

exports[`pass-fail output Group: fail on group afterEach: pass 1`] = `false`;

exports[`pass-fail output Group: fail on group afterEach: reason 1`] = `"Test suite fail on group afterEach failed because an error occurred in an afterEach() callback."`;

exports[`pass-fail output Group: fail on group beforeAll Test: shouldn't run: actual 1`] = `null`;

exports[`pass-fail output Group: fail on group beforeAll Test: shouldn't run: expected 1`] = `null`;

exports[`pass-fail output Group: fail on group beforeAll Test: shouldn't run: message 1`] = `""`;

exports[`pass-fail output Group: fail on group beforeAll Test: shouldn't run: negated 1`] = `false`;

exports[`pass-fail output Group: fail on group beforeAll Test: shouldn't run: pass 1`] = `false`;

exports[`pass-fail output Group: fail on group beforeAll: afterAllPointers 1`] = `0`;

exports[`pass-fail output Group: fail on group beforeAll: afterEachPointers 1`] = `0`;

exports[`pass-fail output Group: fail on group beforeAll: beforeAllPointers 1`] = `1`;

exports[`pass-fail output Group: fail on group beforeAll: beforeEachPointers 1`] = `0`;

exports[`pass-fail output Group: fail on group beforeAll: pass 1`] = `false`;

exports[`pass-fail output Group: fail on group beforeAll: reason 1`] = `"Test suite fail on group beforeAll failed because an error occurred in a beforeAll() callback."`;

exports[`pass-fail output Group: fail on group beforeEach Test: shouldn't run: actual 1`] = `null`;

exports[`pass-fail output Group: fail on group beforeEach Test: shouldn't run: expected 1`] = `null`;

exports[`pass-fail output Group: fail on group beforeEach Test: shouldn't run: message 1`] = `""`;

exports[`pass-fail output Group: fail on group beforeEach Test: shouldn't run: negated 1`] = `false`;

exports[`pass-fail output Group: fail on group beforeEach Test: shouldn't run: pass 1`] = `false`;

exports[`pass-fail output Group: fail on group beforeEach: afterAllPointers 1`] = `0`;

exports[`pass-fail output Group: fail on group beforeEach: afterEachPointers 1`] = `0`;

exports[`pass-fail output Group: fail on group beforeEach: beforeAllPointers 1`] = `0`;

exports[`pass-fail output Group: fail on group beforeEach: beforeEachPointers 1`] = `1`;

exports[`pass-fail output Group: fail on group beforeEach: pass 1`] = `false`;

exports[`pass-fail output Group: fail on group beforeEach: reason 1`] = `"Test suite fail on group beforeEach failed because an error occurred in a beforeEach() callback."`;

exports[`pass-fail output Group: pass on group afterAll Test: should run: actual 1`] = `null`;

exports[`pass-fail output Group: pass on group afterAll Test: should run: expected 1`] = `null`;

exports[`pass-fail output Group: pass on group afterAll Test: should run: message 1`] = `""`;

exports[`pass-fail output Group: pass on group afterAll Test: should run: negated 1`] = `false`;

exports[`pass-fail output Group: pass on group afterAll Test: should run: pass 1`] = `true`;

exports[`pass-fail output Group: pass on group afterAll: afterAllPointers 1`] = `1`;

exports[`pass-fail output Group: pass on group afterAll: afterEachPointers 1`] = `0`;

exports[`pass-fail output Group: pass on group afterAll: beforeAllPointers 1`] = `0`;

exports[`pass-fail output Group: pass on group afterAll: beforeEachPointers 1`] = `0`;

exports[`pass-fail output Group: pass on group afterAll: pass 1`] = `true`;

exports[`pass-fail output Group: pass on group afterAll: reason 1`] = `""`;

exports[`pass-fail output Group: pass on group afterEach Test: should run: actual 1`] = `null`;

exports[`pass-fail output Group: pass on group afterEach Test: should run: expected 1`] = `null`;

exports[`pass-fail output Group: pass on group afterEach Test: should run: message 1`] = `""`;

exports[`pass-fail output Group: pass on group afterEach Test: should run: negated 1`] = `false`;

exports[`pass-fail output Group: pass on group afterEach Test: should run: pass 1`] = `true`;

exports[`pass-fail output Group: pass on group afterEach: afterAllPointers 1`] = `0`;

exports[`pass-fail output Group: pass on group afterEach: afterEachPointers 1`] = `1`;

exports[`pass-fail output Group: pass on group afterEach: beforeAllPointers 1`] = `0`;

exports[`pass-fail output Group: pass on group afterEach: beforeEachPointers 1`] = `0`;

exports[`pass-fail output Group: pass on group afterEach: pass 1`] = `true`;

exports[`pass-fail output Group: pass on group afterEach: reason 1`] = `""`;

exports[`pass-fail output Group: pass on group beforeAll Test: should run: actual 1`] = `null`;

exports[`pass-fail output Group: pass on group beforeAll Test: should run: expected 1`] = `null`;

exports[`pass-fail output Group: pass on group beforeAll Test: should run: message 1`] = `""`;

exports[`pass-fail output Group: pass on group beforeAll Test: should run: negated 1`] = `false`;

exports[`pass-fail output Group: pass on group beforeAll Test: should run: pass 1`] = `true`;

exports[`pass-fail output Group: pass on group beforeAll: afterAllPointers 1`] = `0`;

exports[`pass-fail output Group: pass on group beforeAll: afterEachPointers 1`] = `0`;

exports[`pass-fail output Group: pass on group beforeAll: beforeAllPointers 1`] = `1`;

exports[`pass-fail output Group: pass on group beforeAll: beforeEachPointers 1`] = `0`;

exports[`pass-fail output Group: pass on group beforeAll: pass 1`] = `true`;

exports[`pass-fail output Group: pass on group beforeAll: reason 1`] = `""`;

exports[`pass-fail output Group: pass on group beforeEach Test: should run: actual 1`] = `null`;

exports[`pass-fail output Group: pass on group beforeEach Test: should run: expected 1`] = `null`;

exports[`pass-fail output Group: pass on group beforeEach Test: should run: message 1`] = `""`;

exports[`pass-fail output Group: pass on group beforeEach Test: should run: negated 1`] = `false`;

exports[`pass-fail output Group: pass on group beforeEach Test: should run: pass 1`] = `true`;

exports[`pass-fail output Group: pass on group beforeEach: afterAllPointers 1`] = `0`;

exports[`pass-fail output Group: pass on group beforeEach: afterEachPointers 1`] = `0`;

exports[`pass-fail output Group: pass on group beforeEach: beforeAllPointers 1`] = `0`;

exports[`pass-fail output Group: pass on group beforeEach: beforeEachPointers 1`] = `1`;

exports[`pass-fail output Group: pass on group beforeEach: pass 1`] = `true`;

exports[`pass-fail output Group: pass on group beforeEach: reason 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should expect strings: actual 1`] = `
HostValue {
  "isManaged": true,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 896,
  "signed": false,
  "size": 3,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<~lib/string/String> (wasm-function[76]:0x1be9)
    at ../assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe (wasm-function[78]:0x1c4a)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|2 (wasm-function[79]:0x1c7c)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 2,
  "typeId": 1,
  "typeName": "String",
  "value": "two",
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should expect strings: actual-stringify 1`] = `"  string: \\"two\\""`;

exports[`pass-fail output Group: pass-fail Test: should expect strings: expected 1`] = `
HostValue {
  "isManaged": true,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 928,
  "signed": false,
  "size": 3,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Expected/Expected.report<~lib/string/String> (wasm-function[77]:0x1c1d)
    at ../assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe (wasm-function[78]:0x1c50)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|2 (wasm-function[79]:0x1c7c)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 2,
  "typeId": 1,
  "typeName": "String",
  "value": "one",
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should expect strings: expected-stringify 1`] = `"  string: \\"one\\""`;

exports[`pass-fail output Group: pass-fail Test: should expect strings: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should expect strings: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should expect strings: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should fail when test does not throw: actual 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should fail when test does not throw: expected 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should fail when test does not throw: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should fail when test does not throw: negated 1`] = `true`;

exports[`pass-fail output Group: pass-fail Test: should fail when test does not throw: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should fail: actual 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should fail: expected 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should fail: message 1`] = `"expected fail"`;

exports[`pass-fail output Group: pass-fail Test: should fail: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should fail: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report a negated test: actual 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should report a negated test: expected 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should report a negated test: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report a negated test: negated 1`] = `true`;

exports[`pass-fail output Group: pass-fail Test: should report a negated test: pass 1`] = `true`;

exports[`pass-fail output Group: pass-fail Test: should report array values: actual 1`] = `
HostValue {
  "isManaged": true,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 7328,
  "signed": false,
  "size": 3,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<~lib/array/Array<i32>> (wasm-function[145]:0x37ab)
    at ../assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual (wasm-function[147]:0x3837)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|11 (wasm-function[148]:0x388c)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 10,
  "typeId": 12,
  "typeName": "Array<i32>",
  "value": 0,
  "values": Array [
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 7760,
      "signed": true,
      "size": 4,
      "stack": "",
      "type": 7,
      "typeId": 0,
      "typeName": "i32",
      "value": 1,
      "values": null,
    },
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 7760,
      "signed": true,
      "size": 4,
      "stack": "",
      "type": 7,
      "typeId": 0,
      "typeName": "i32",
      "value": 2,
      "values": null,
    },
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 7760,
      "signed": true,
      "size": 4,
      "stack": "",
      "type": 7,
      "typeId": 0,
      "typeName": "i32",
      "value": 3,
      "values": null,
    },
  ],
}
`;

exports[`pass-fail output Group: pass-fail Test: should report array values: actual-stringify 1`] = `
"  class: Array<i32> [
      number: 1,
      number: 2,
      number: 3
  ]"
`;

exports[`pass-fail output Group: pass-fail Test: should report array values: expected 1`] = `
HostValue {
  "isManaged": true,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 7424,
  "signed": false,
  "size": 3,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Expected/Expected.report<~lib/array/Array<i32>> (wasm-function[146]:0x37e0)
    at ../assembly/assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual (wasm-function[147]:0x383e)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|11 (wasm-function[148]:0x388c)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 10,
  "typeId": 12,
  "typeName": "Array<i32>",
  "value": 0,
  "values": Array [
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 7760,
      "signed": true,
      "size": 4,
      "stack": "",
      "type": 7,
      "typeId": 0,
      "typeName": "i32",
      "value": 4,
      "values": null,
    },
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 7760,
      "signed": true,
      "size": 4,
      "stack": "",
      "type": 7,
      "typeId": 0,
      "typeName": "i32",
      "value": 5,
      "values": null,
    },
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 7760,
      "signed": true,
      "size": 4,
      "stack": "",
      "type": 7,
      "typeId": 0,
      "typeName": "i32",
      "value": 6,
      "values": null,
    },
  ],
}
`;

exports[`pass-fail output Group: pass-fail Test: should report array values: expected-stringify 1`] = `
"  class: Array<i32> [
      number: 4,
      number: 5,
      number: 6
  ]"
`;

exports[`pass-fail output Group: pass-fail Test: should report array values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report array values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report array values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report bool values: actual 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 8176,
  "signed": false,
  "size": 1,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<bool> (wasm-function[186]:0x41e8)
    at ../assembly/assembly/internal/Expectation/Expectation<bool>#toBe (wasm-function[188]:0x4237)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|15 (wasm-function[189]:0x4266)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 9,
  "typeId": 0,
  "typeName": "bool",
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report bool values: actual-stringify 1`] = `"  keyword: false"`;

exports[`pass-fail output Group: pass-fail Test: should report bool values: expected 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 8176,
  "signed": false,
  "size": 1,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Expected/Expected.report<bool> (wasm-function[187]:0x420f)
    at ../assembly/assembly/internal/Expectation/Expectation<bool>#toBe (wasm-function[188]:0x423e)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|15 (wasm-function[189]:0x4266)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 9,
  "typeId": 0,
  "typeName": "bool",
  "value": 1,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report bool values: expected-stringify 1`] = `"  keyword: true"`;

exports[`pass-fail output Group: pass-fail Test: should report bool values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report bool values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report bool values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report expected finite values: actual 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 7056,
  "signed": true,
  "size": 8,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<f64> (wasm-function[85]:0x1d61)
    at ../assembly/assembly/internal/Expectation/Expectation<f64>#toBeFinite (wasm-function[87]:0x1d8b)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|3 (wasm-function[88]:0x1dc8)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 8,
  "typeId": 0,
  "typeName": "f64",
  "value": NaN,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report expected finite values: actual-stringify 1`] = `"  number: NaN.0"`;

exports[`pass-fail output Group: pass-fail Test: should report expected finite values: expected 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 0,
  "signed": false,
  "size": 0,
  "stack": "",
  "type": 12,
  "typeId": 0,
  "typeName": null,
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report expected finite values: expected-stringify 1`] = `"Finite"`;

exports[`pass-fail output Group: pass-fail Test: should report expected finite values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report expected finite values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report expected finite values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report f32 values: actual 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should report f32 values: expected 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should report f32 values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report f32 values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report f32 values: pass 1`] = `true`;

exports[`pass-fail output Group: pass-fail Test: should report failed functions: actual 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 1,
  "signed": false,
  "size": 0,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<(i: i32) => i32> (wasm-function[195]:0x4367)
    at ../assembly/assembly/internal/Expectation/Expectation<(i: i32) => i32>#toBe (wasm-function[197]:0x43b0)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|17 (wasm-function[198]:0x43df)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 6,
  "typeId": 13,
  "typeName": "Function",
  "value": "",
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report failed functions: actual-stringify 1`] = `"  class: [Function 1: ]"`;

exports[`pass-fail output Group: pass-fail Test: should report failed functions: expected 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 2,
  "signed": false,
  "size": 0,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Expected/Expected.report<(i: i32) => i32> (wasm-function[196]:0x438e)
    at ../assembly/assembly/internal/Expectation/Expectation<(i: i32) => i32>#toBe (wasm-function[197]:0x43b7)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|17 (wasm-function[198]:0x43df)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 6,
  "typeId": 13,
  "typeName": "Function",
  "value": "",
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report failed functions: expected-stringify 1`] = `"  class: [Function 2: ]"`;

exports[`pass-fail output Group: pass-fail Test: should report failed functions: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report failed functions: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report failed functions: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report falsy expected values: actual 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 7088,
  "signed": true,
  "size": 4,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<i32> (wasm-function[54]:0x1527)
    at ../assembly/assembly/internal/Expectation/Expectation<i32>#toBeFalsy (wasm-function[90]:0x1de9)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|4 (wasm-function[91]:0x1e1c)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 7,
  "typeId": 0,
  "typeName": "i32",
  "value": 1,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report falsy expected values: actual-stringify 1`] = `"  number: 1"`;

exports[`pass-fail output Group: pass-fail Test: should report falsy expected values: expected 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 0,
  "signed": false,
  "size": 0,
  "stack": "",
  "type": 14,
  "typeId": 0,
  "typeName": null,
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report falsy expected values: expected-stringify 1`] = `"Falsy"`;

exports[`pass-fail output Group: pass-fail Test: should report falsy expected values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report falsy expected values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report falsy expected values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report falsy values: actual 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 8368,
  "signed": false,
  "size": 1,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<bool> (wasm-function[186]:0x41e8)
    at ../assembly/assembly/internal/Expectation/Expectation<bool>#toBeFalsy (wasm-function[203]:0x447a)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|21 (wasm-function[205]:0x44d1)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 9,
  "typeId": 0,
  "typeName": "bool",
  "value": 1,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report falsy values: actual-stringify 1`] = `"  keyword: true"`;

exports[`pass-fail output Group: pass-fail Test: should report falsy values: expected 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 0,
  "signed": false,
  "size": 0,
  "stack": "",
  "type": 14,
  "typeId": 0,
  "typeName": null,
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report falsy values: expected-stringify 1`] = `"Falsy"`;

exports[`pass-fail output Group: pass-fail Test: should report falsy values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report falsy values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report falsy values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: actual 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: actual 2`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 8400,
  "signed": true,
  "size": 8,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<f64> (wasm-function[85]:0x1d61)
    at ../assembly/assembly/internal/Expectation/Expectation<f64>#toBeFinite (wasm-function[87]:0x1d8b)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|23 (wasm-function[207]:0x4508)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 8,
  "typeId": 0,
  "typeName": "f64",
  "value": NaN,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: actual 3`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 8432,
  "signed": true,
  "size": 8,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<f64> (wasm-function[85]:0x1d61)
    at ../assembly/assembly/internal/Expectation/Expectation<f64>#toBeFinite (wasm-function[87]:0x1d8b)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|24 (wasm-function[209]:0x4536)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 8,
  "typeId": 0,
  "typeName": "f64",
  "value": 3,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: actual-stringify 1`] = `"  number: NaN.0"`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: actual-stringify 2`] = `"  number: 3.0"`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: expected 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: expected 2`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 0,
  "signed": false,
  "size": 0,
  "stack": "",
  "type": 12,
  "typeId": 0,
  "typeName": null,
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: expected 3`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": true,
  "nullable": false,
  "offset": 0,
  "pointer": 0,
  "signed": false,
  "size": 0,
  "stack": "",
  "type": 12,
  "typeId": 0,
  "typeName": null,
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: expected-stringify 1`] = `"Finite"`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: expected-stringify 2`] = `"Not Finite"`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: message 2`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: message 3`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: negated 2`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: negated 3`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: pass 1`] = `true`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: pass 2`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report finite values: pass 3`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report i16 values: actual 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should report i16 values: actual 2`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should report i16 values: expected 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should report i16 values: expected 2`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should report i16 values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report i16 values: message 2`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report i16 values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report i16 values: negated 2`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report i16 values: pass 1`] = `true`;

exports[`pass-fail output Group: pass-fail Test: should report i16 values: pass 2`] = `true`;

exports[`pass-fail output Group: pass-fail Test: should report invalid strings: actual 1`] = `
HostValue {
  "isManaged": true,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 3072,
  "signed": false,
  "size": 4,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<~lib/string/String> (wasm-function[76]:0x1be9)
    at ../assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe (wasm-function[78]:0x1c4a)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|16 (wasm-function[190]:0x427f)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 2,
  "typeId": 1,
  "typeName": "String",
  "value": "Test",
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report invalid strings: actual-stringify 1`] = `"  string: \\"Test\\""`;

exports[`pass-fail output Group: pass-fail Test: should report invalid strings: expected 1`] = `
HostValue {
  "isManaged": true,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 3104,
  "signed": false,
  "size": 7,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Expected/Expected.report<~lib/string/String> (wasm-function[77]:0x1c1d)
    at ../assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe (wasm-function[78]:0x1c50)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|16 (wasm-function[190]:0x427f)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 2,
  "typeId": 1,
  "typeName": "String",
  "value": "invalid",
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report invalid strings: expected-stringify 1`] = `"  string: \\"invalid\\""`;

exports[`pass-fail output Group: pass-fail Test: should report invalid strings: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report invalid strings: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report invalid strings: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report long values: actual 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 8112,
  "signed": true,
  "size": 8,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<i64> (wasm-function[168]:0x3f2a)
    at ../assembly/assembly/internal/Expectation/Expectation<i64>#toBe (wasm-function[170]:0x3f73)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|13 (wasm-function[171]:0x3faa)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 7,
  "typeId": 0,
  "typeName": "i64",
  "value": "-9999999999",
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report long values: actual-stringify 1`] = `"  number: -9999999999 keyword: as class: i64"`;

exports[`pass-fail output Group: pass-fail Test: should report long values: expected 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 8112,
  "signed": true,
  "size": 8,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Expected/Expected.report<i64> (wasm-function[169]:0x3f51)
    at ../assembly/assembly/internal/Expectation/Expectation<i64>#toBe (wasm-function[170]:0x3f7a)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|13 (wasm-function[171]:0x3faa)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 7,
  "typeId": 0,
  "typeName": "i64",
  "value": "9999999999",
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report long values: expected-stringify 1`] = `"  number: 9999999999 keyword: as class: i64"`;

exports[`pass-fail output Group: pass-fail Test: should report long values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report long values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report long values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report not falsy values: actual 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 8336,
  "signed": false,
  "size": 1,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<bool> (wasm-function[186]:0x41e8)
    at ../assembly/assembly/internal/Expectation/Expectation<bool>#toBeFalsy (wasm-function[203]:0x447a)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|20 (wasm-function[204]:0x44b7)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 9,
  "typeId": 0,
  "typeName": "bool",
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report not falsy values: actual-stringify 1`] = `"  keyword: false"`;

exports[`pass-fail output Group: pass-fail Test: should report not falsy values: expected 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": true,
  "nullable": false,
  "offset": 0,
  "pointer": 0,
  "signed": false,
  "size": 0,
  "stack": "",
  "type": 14,
  "typeId": 0,
  "typeName": null,
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report not falsy values: expected-stringify 1`] = `"Not Falsy"`;

exports[`pass-fail output Group: pass-fail Test: should report not falsy values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report not falsy values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report not falsy values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report not truthy values: actual 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 8272,
  "signed": false,
  "size": 1,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<bool> (wasm-function[186]:0x41e8)
    at ../assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy (wasm-function[200]:0x4408)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|18 (wasm-function[201]:0x4445)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 9,
  "typeId": 0,
  "typeName": "bool",
  "value": 1,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report not truthy values: actual-stringify 1`] = `"  keyword: true"`;

exports[`pass-fail output Group: pass-fail Test: should report not truthy values: expected 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": true,
  "nullable": false,
  "offset": 0,
  "pointer": 0,
  "signed": false,
  "size": 0,
  "stack": "",
  "type": 13,
  "typeId": 0,
  "typeName": null,
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report not truthy values: expected-stringify 1`] = `"Not Truthy"`;

exports[`pass-fail output Group: pass-fail Test: should report not truthy values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report not truthy values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report not truthy values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report nulls: actual 1`] = `
HostValue {
  "isManaged": true,
  "isNull": true,
  "keys": null,
  "negated": false,
  "nullable": true,
  "offset": 0,
  "pointer": 0,
  "signed": false,
  "size": 4,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<assembly/jest-pass-fail/Vec3 | null> (wasm-function[129]:0x32f6)
    at ../assembly/assembly/internal/Expectation/Expectation<assembly/jest-pass-fail/Vec3 | null>#toBeNull (wasm-function[131]:0x3354)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|8 (wasm-function[132]:0x3388)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 1,
  "typeId": 9,
  "typeName": "Vec3",
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report nulls: actual-stringify 1`] = `"  class: <Vec3>null"`;

exports[`pass-fail output Group: pass-fail Test: should report nulls: expected 1`] = `
HostValue {
  "isManaged": true,
  "isNull": true,
  "keys": null,
  "negated": true,
  "nullable": true,
  "offset": 0,
  "pointer": 0,
  "signed": false,
  "size": 4,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Expected/Expected.report<assembly/jest-pass-fail/Vec3 | null> (wasm-function[130]:0x332b)
    at ../assembly/assembly/internal/Expectation/Expectation<assembly/jest-pass-fail/Vec3 | null>#toBeNull (wasm-function[131]:0x335b)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|8 (wasm-function[132]:0x3388)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 1,
  "typeId": 9,
  "typeName": "Vec3",
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report nulls: expected-stringify 1`] = `"  class: <Vec3>null"`;

exports[`pass-fail output Group: pass-fail Test: should report nulls: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report nulls: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report nulls: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report number values: actual 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 7408,
  "signed": true,
  "size": 4,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<i32> (wasm-function[54]:0x1527)
    at ../assembly/assembly/internal/Expectation/Expectation<i32>#toBe (wasm-function[59]:0x15a7)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|7 (wasm-function[123]:0x3182)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 7,
  "typeId": 0,
  "typeName": "i32",
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report number values: actual-stringify 1`] = `"  number: 0"`;

exports[`pass-fail output Group: pass-fail Test: should report number values: expected 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 7408,
  "signed": true,
  "size": 4,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Expected/Expected.report<i32> (wasm-function[55]:0x154d)
    at ../assembly/assembly/internal/Expectation/Expectation<i32>#toBe (wasm-function[59]:0x15ad)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|7 (wasm-function[123]:0x3182)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 7,
  "typeId": 0,
  "typeName": "i32",
  "value": 42,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report number values: expected-stringify 1`] = `"  number: 42"`;

exports[`pass-fail output Group: pass-fail Test: should report number values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report number values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report number values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report reference values: actual 1`] = `
HostValue {
  "isManaged": true,
  "isNull": false,
  "keys": Array [
    HostValue {
      "isManaged": true,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 1744,
      "signed": false,
      "size": 1,
      "stack": "",
      "type": 2,
      "typeId": 1,
      "typeName": "String",
      "value": "x",
      "values": null,
    },
    HostValue {
      "isManaged": true,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 1776,
      "signed": false,
      "size": 1,
      "stack": "",
      "type": 2,
      "typeId": 1,
      "typeName": "String",
      "value": "y",
      "values": null,
    },
    HostValue {
      "isManaged": true,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 1808,
      "signed": false,
      "size": 1,
      "stack": "",
      "type": 2,
      "typeId": 1,
      "typeName": "String",
      "value": "z",
      "values": null,
    },
  ],
  "negated": false,
  "nullable": false,
  "offset": 24,
  "pointer": 6976,
  "signed": false,
  "size": 24,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<assembly/jest-pass-fail/Vec3> (wasm-function[119]:0x3064)
    at ../assembly/assembly/internal/Expectation/Expectation<assembly/jest-pass-fail/Vec3>#toStrictEqual (wasm-function[121]:0x30ee)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|6 (wasm-function[122]:0x3164)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 1,
  "typeId": 9,
  "typeName": "Vec3",
  "value": 0,
  "values": Array [
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 7376,
      "signed": true,
      "size": 8,
      "stack": "",
      "type": 8,
      "typeId": 0,
      "typeName": "f64",
      "value": 1,
      "values": null,
    },
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 7376,
      "signed": true,
      "size": 8,
      "stack": "",
      "type": 8,
      "typeId": 0,
      "typeName": "f64",
      "value": 2,
      "values": null,
    },
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 7376,
      "signed": true,
      "size": 8,
      "stack": "",
      "type": 8,
      "typeId": 0,
      "typeName": "f64",
      "value": 3,
      "values": null,
    },
  ],
}
`;

exports[`pass-fail output Group: pass-fail Test: should report reference values: actual-stringify 1`] = `
"  class: Vec3 {
      string: x: number: 1.0,
      string: y: number: 2.0,
      string: z: number: 3.0
  }"
`;

exports[`pass-fail output Group: pass-fail Test: should report reference values: expected 1`] = `
HostValue {
  "isManaged": true,
  "isNull": false,
  "keys": Array [
    HostValue {
      "isManaged": true,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 1744,
      "signed": false,
      "size": 1,
      "stack": "",
      "type": 2,
      "typeId": 1,
      "typeName": "String",
      "value": "x",
      "values": null,
    },
    HostValue {
      "isManaged": true,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 1776,
      "signed": false,
      "size": 1,
      "stack": "",
      "type": 2,
      "typeId": 1,
      "typeName": "String",
      "value": "y",
      "values": null,
    },
    HostValue {
      "isManaged": true,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 1808,
      "signed": false,
      "size": 1,
      "stack": "",
      "type": 2,
      "typeId": 1,
      "typeName": "String",
      "value": "z",
      "values": null,
    },
  ],
  "negated": false,
  "nullable": false,
  "offset": 24,
  "pointer": 7056,
  "signed": false,
  "size": 24,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Expected/Expected.report<assembly/jest-pass-fail/Vec3> (wasm-function[120]:0x3098)
    at ../assembly/assembly/internal/Expectation/Expectation<assembly/jest-pass-fail/Vec3>#toStrictEqual (wasm-function[121]:0x30f4)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|6 (wasm-function[122]:0x3164)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 1,
  "typeId": 9,
  "typeName": "Vec3",
  "value": 0,
  "values": Array [
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 7376,
      "signed": true,
      "size": 8,
      "stack": "",
      "type": 8,
      "typeId": 0,
      "typeName": "f64",
      "value": 4,
      "values": null,
    },
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 7376,
      "signed": true,
      "size": 8,
      "stack": "",
      "type": 8,
      "typeId": 0,
      "typeName": "f64",
      "value": 5,
      "values": null,
    },
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 7376,
      "signed": true,
      "size": 8,
      "stack": "",
      "type": 8,
      "typeId": 0,
      "typeName": "f64",
      "value": 6,
      "values": null,
    },
  ],
}
`;

exports[`pass-fail output Group: pass-fail Test: should report reference values: expected-stringify 1`] = `
"  class: Vec3 {
      string: x: number: 4.0,
      string: y: number: 5.0,
      string: z: number: 6.0
  }"
`;

exports[`pass-fail output Group: pass-fail Test: should report reference values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report reference values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report reference values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report truthy expected values: actual 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 7120,
  "signed": true,
  "size": 4,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<i32> (wasm-function[54]:0x1527)
    at ../assembly/assembly/internal/Expectation/Expectation<i32>#toBeTruthy (wasm-function[93]:0x1e3d)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|5 (wasm-function[94]:0x1e70)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 7,
  "typeId": 0,
  "typeName": "i32",
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report truthy expected values: actual-stringify 1`] = `"  number: 0"`;

exports[`pass-fail output Group: pass-fail Test: should report truthy expected values: expected 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 0,
  "signed": false,
  "size": 0,
  "stack": "",
  "type": 13,
  "typeId": 0,
  "typeName": null,
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report truthy expected values: expected-stringify 1`] = `"Truthy"`;

exports[`pass-fail output Group: pass-fail Test: should report truthy expected values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report truthy expected values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report truthy expected values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report truthy values: actual 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 8304,
  "signed": false,
  "size": 1,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<bool> (wasm-function[186]:0x41e8)
    at ../assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy (wasm-function[200]:0x4408)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|19 (wasm-function[202]:0x445f)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 9,
  "typeId": 0,
  "typeName": "bool",
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report truthy values: actual-stringify 1`] = `"  keyword: false"`;

exports[`pass-fail output Group: pass-fail Test: should report truthy values: expected 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 0,
  "signed": false,
  "size": 0,
  "stack": "",
  "type": 13,
  "typeId": 0,
  "typeName": null,
  "value": 0,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report truthy values: expected-stringify 1`] = `"Truthy"`;

exports[`pass-fail output Group: pass-fail Test: should report truthy values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report truthy values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report truthy values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report typedarray values: actual 1`] = `
HostValue {
  "isManaged": true,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 7616,
  "signed": false,
  "size": 3,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<~lib/typedarray/Float64Array> (wasm-function[159]:0x3d05)
    at ../assembly/assembly/internal/Expectation/Expectation<~lib/typedarray/Float64Array>#toStrictEqual (wasm-function[161]:0x3d91)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|12 (wasm-function[162]:0x3e3f)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 11,
  "typeId": 15,
  "typeName": "Float64Array",
  "value": 0,
  "values": Array [
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 8080,
      "signed": true,
      "size": 8,
      "stack": "",
      "type": 8,
      "typeId": 0,
      "typeName": "f64",
      "value": 1.1,
      "values": null,
    },
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 8080,
      "signed": true,
      "size": 8,
      "stack": "",
      "type": 8,
      "typeId": 0,
      "typeName": "f64",
      "value": 2.2,
      "values": null,
    },
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 8080,
      "signed": true,
      "size": 8,
      "stack": "",
      "type": 8,
      "typeId": 0,
      "typeName": "f64",
      "value": 3.3,
      "values": null,
    },
  ],
}
`;

exports[`pass-fail output Group: pass-fail Test: should report typedarray values: actual-stringify 1`] = `"  class: Float64Array [number: 1.1, number: 2.2, number: 3.3, ]"`;

exports[`pass-fail output Group: pass-fail Test: should report typedarray values: expected 1`] = `
HostValue {
  "isManaged": true,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 7696,
  "signed": false,
  "size": 3,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Expected/Expected.report<~lib/typedarray/Float64Array> (wasm-function[160]:0x3d3a)
    at ../assembly/assembly/internal/Expectation/Expectation<~lib/typedarray/Float64Array>#toStrictEqual (wasm-function[161]:0x3d98)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|12 (wasm-function[162]:0x3e3f)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 11,
  "typeId": 15,
  "typeName": "Float64Array",
  "value": 0,
  "values": Array [
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 8080,
      "signed": true,
      "size": 8,
      "stack": "",
      "type": 8,
      "typeId": 0,
      "typeName": "f64",
      "value": 4.4,
      "values": null,
    },
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 8080,
      "signed": true,
      "size": 8,
      "stack": "",
      "type": 8,
      "typeId": 0,
      "typeName": "f64",
      "value": 5.5,
      "values": null,
    },
    HostValue {
      "isManaged": false,
      "isNull": false,
      "keys": null,
      "negated": false,
      "nullable": false,
      "offset": 0,
      "pointer": 8080,
      "signed": true,
      "size": 8,
      "stack": "",
      "type": 8,
      "typeId": 0,
      "typeName": "f64",
      "value": 6.6,
      "values": null,
    },
  ],
}
`;

exports[`pass-fail output Group: pass-fail Test: should report typedarray values: expected-stringify 1`] = `"  class: Float64Array [number: 4.4, number: 5.5, number: 6.6, ]"`;

exports[`pass-fail output Group: pass-fail Test: should report typedarray values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report typedarray values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report typedarray values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report u32 values: actual 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 8144,
  "signed": false,
  "size": 4,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Actual/Actual.report<u32> (wasm-function[177]:0x408d)
    at ../assembly/assembly/internal/Expectation/Expectation<u32>#toBe (wasm-function[179]:0x40d6)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|14 (wasm-function[180]:0x4105)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 7,
  "typeId": 0,
  "typeName": "u32",
  "value": 4294967294,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report u32 values: actual-stringify 1`] = `"  number: 4294967294 keyword: as class: u32"`;

exports[`pass-fail output Group: pass-fail Test: should report u32 values: expected 1`] = `
HostValue {
  "isManaged": false,
  "isNull": false,
  "keys": null,
  "negated": false,
  "nullable": false,
  "offset": 0,
  "pointer": 8144,
  "signed": false,
  "size": 4,
  "stack": "    at ../assembly/assembly/internal/Reflect/Reflect.attachStackTrace (wasm-function[53]:0x150f)
    at ../assembly/assembly/internal/Expected/Expected.report<u32> (wasm-function[178]:0x40b4)
    at ../assembly/assembly/internal/Expectation/Expectation<u32>#toBe (wasm-function[179]:0x40dd)
    at start:assembly/jest-pass-fail~anonymous|3~anonymous|14 (wasm-function[180]:0x4105)
    at ../assembly/assembly/internal/call/__call (wasm-function[289]:0x4dd0)",
  "type": 7,
  "typeId": 0,
  "typeName": "u32",
  "value": 4294967293,
  "values": null,
}
`;

exports[`pass-fail output Group: pass-fail Test: should report u32 values: expected-stringify 1`] = `"  number: 4294967293 keyword: as class: u32"`;

exports[`pass-fail output Group: pass-fail Test: should report u32 values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report u32 values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report u32 values: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report u64 values: actual 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should report u64 values: expected 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: should report u64 values: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: should report u64 values: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: should report u64 values: pass 1`] = `true`;

exports[`pass-fail output Group: pass-fail Test: this test should pass: actual 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: this test should pass: expected 1`] = `null`;

exports[`pass-fail output Group: pass-fail Test: this test should pass: message 1`] = `""`;

exports[`pass-fail output Group: pass-fail Test: this test should pass: negated 1`] = `false`;

exports[`pass-fail output Group: pass-fail Test: this test should pass: pass 1`] = `true`;

exports[`pass-fail output Group: pass-fail: afterAllPointers 1`] = `0`;

exports[`pass-fail output Group: pass-fail: afterEachPointers 1`] = `0`;

exports[`pass-fail output Group: pass-fail: beforeAllPointers 1`] = `0`;

exports[`pass-fail output Group: pass-fail: beforeEachPointers 1`] = `0`;

exports[`pass-fail output Group: pass-fail: pass 1`] = `false`;

exports[`pass-fail output Group: pass-fail: reason 1`] = `""`;

exports[`pass-fail output Overall Statistics: pass 1`] = `false`;
